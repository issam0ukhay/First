{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { booleanAttribute, Directive, Input, NgModule } from '@angular/core';\nimport { DomHandler } from 'primeng/dom';\n\n/**\n * AutoFocus manages focus on focusable element on load.\n * @group Components\n */\nclass AutoFocus {\n  host;\n  constructor(host) {\n    this.host = host;\n  }\n  /**\n   * When present, it specifies that the component should automatically get focus on load.\n   * @group Props\n   */\n  autofocus = false;\n  focused = false;\n  ngAfterContentChecked() {\n    // This sets the `attr.autofocus` which is different than the Input `autofocus` attribute.\n    if (this.autofocus === false) {\n      this.host.nativeElement.removeAttribute('autofocus');\n    } else {\n      this.host.nativeElement.setAttribute('autofocus', true);\n    }\n    if (!this.focused) {\n      if (this.autofocus) {\n        setTimeout(() => {\n          const focusableElements = DomHandler.getFocusableElements(this.host.nativeElement);\n          if (focusableElements.length === 0) {\n            this.host.nativeElement.focus();\n          }\n          if (focusableElements.length > 0) {\n            focusableElements[0].focus();\n          }\n          this.focused = true;\n        });\n      }\n    }\n  }\n  static ɵfac = function AutoFocus_Factory(t) {\n    return new (t || AutoFocus)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AutoFocus,\n    selectors: [[\"\", \"pAutoFocus\", \"\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      autofocus: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"autofocus\", \"autofocus\", booleanAttribute]\n    },\n    features: [i0.ɵɵInputTransformsFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoFocus, [{\n    type: Directive,\n    args: [{\n      selector: '[pAutoFocus]',\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], {\n    autofocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass AutoFocusModule {\n  static ɵfac = function AutoFocusModule_Factory(t) {\n    return new (t || AutoFocusModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AutoFocusModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoFocusModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [AutoFocus],\n      declarations: [AutoFocus]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutoFocus, AutoFocusModule };","map":{"version":3,"names":["CommonModule","i0","booleanAttribute","Directive","Input","NgModule","DomHandler","AutoFocus","host","constructor","autofocus","focused","ngAfterContentChecked","nativeElement","removeAttribute","setAttribute","setTimeout","focusableElements","getFocusableElements","length","focus","ɵfac","AutoFocus_Factory","t","ɵɵdirectiveInject","ElementRef","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","inputs","ɵɵInputFlags","HasDecoratorInputTransform","features","ɵɵInputTransformsFeature","ngDevMode","ɵsetClassMetadata","args","selector","class","transform","AutoFocusModule","AutoFocusModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/Users/issam/Desktop/AXE/Share/sharepop/First/node_modules/primeng/fesm2022/primeng-autofocus.mjs"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { booleanAttribute, Directive, Input, NgModule } from '@angular/core';\nimport { DomHandler } from 'primeng/dom';\n\n/**\n * AutoFocus manages focus on focusable element on load.\n * @group Components\n */\nclass AutoFocus {\n    host;\n    constructor(host) {\n        this.host = host;\n    }\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    autofocus = false;\n    focused = false;\n    ngAfterContentChecked() {\n        // This sets the `attr.autofocus` which is different than the Input `autofocus` attribute.\n        if (this.autofocus === false) {\n            this.host.nativeElement.removeAttribute('autofocus');\n        }\n        else {\n            this.host.nativeElement.setAttribute('autofocus', true);\n        }\n        if (!this.focused) {\n            if (this.autofocus) {\n                setTimeout(() => {\n                    const focusableElements = DomHandler.getFocusableElements(this.host.nativeElement);\n                    if (focusableElements.length === 0) {\n                        this.host.nativeElement.focus();\n                    }\n                    if (focusableElements.length > 0) {\n                        focusableElements[0].focus();\n                    }\n                    this.focused = true;\n                });\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.7\", ngImport: i0, type: AutoFocus, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.3.7\", type: AutoFocus, selector: \"[pAutoFocus]\", inputs: { autofocus: [\"autofocus\", \"autofocus\", booleanAttribute] }, host: { classAttribute: \"p-element\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.7\", ngImport: i0, type: AutoFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pAutoFocus]',\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }], propDecorators: { autofocus: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\nclass AutoFocusModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.7\", ngImport: i0, type: AutoFocusModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.7\", ngImport: i0, type: AutoFocusModule, declarations: [AutoFocus], imports: [CommonModule], exports: [AutoFocus] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.7\", ngImport: i0, type: AutoFocusModule, imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.7\", ngImport: i0, type: AutoFocusModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [AutoFocus],\n                    declarations: [AutoFocus]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutoFocus, AutoFocusModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}