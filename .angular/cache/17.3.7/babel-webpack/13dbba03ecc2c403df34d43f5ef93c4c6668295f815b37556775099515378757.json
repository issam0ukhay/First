{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, afterNextRender, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Header, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nconst _c0 = [[[\"p-header\"]]];\nconst _c1 = [\"p-header\"];\nfunction Editor_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Editor_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, Editor_div_1_ng_container_2_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplate);\n  }\n}\nfunction Editor_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"span\", 5)(2, \"select\", 6)(3, \"option\", 7);\n    i0.ɵɵtext(4, \"Heading\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"option\", 8);\n    i0.ɵɵtext(6, \"Subheading\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 9);\n    i0.ɵɵtext(8, \"Normal\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"select\", 10)(10, \"option\", 9);\n    i0.ɵɵtext(11, \"Sans Serif\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 11);\n    i0.ɵɵtext(13, \"Serif\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 12);\n    i0.ɵɵtext(15, \"Monospace\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"span\", 5);\n    i0.ɵɵelement(17, \"button\", 13)(18, \"button\", 14)(19, \"button\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"span\", 5);\n    i0.ɵɵelement(21, \"select\", 16)(22, \"select\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"span\", 5);\n    i0.ɵɵelement(24, \"button\", 18)(25, \"button\", 19);\n    i0.ɵɵelementStart(26, \"select\", 20);\n    i0.ɵɵelement(27, \"option\", 9);\n    i0.ɵɵelementStart(28, \"option\", 21);\n    i0.ɵɵtext(29, \"center\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"option\", 22);\n    i0.ɵɵtext(31, \"right\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"option\", 23);\n    i0.ɵɵtext(33, \"justify\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"span\", 5);\n    i0.ɵɵelement(35, \"button\", 24)(36, \"button\", 25)(37, \"button\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"span\", 5);\n    i0.ɵɵelement(39, \"button\", 27);\n    i0.ɵɵelementEnd()();\n  }\n}\nconst EDITOR_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Editor),\n  multi: true\n};\n/**\n * Editor groups a collection of contents in tabs.\n * @group Components\n */\nclass Editor {\n  el;\n  platformId;\n  /**\n   * Inline style of the container.\n   * @group Props\n   */\n  style;\n  /**\n   * Style class of the container.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Placeholder text to show when editor is empty.\n   * @group Props\n   */\n  placeholder;\n  /**\n   * Whitelist of formats to display, see here for available options.\n   * @group Props\n   */\n  formats;\n  /**\n   * Modules configuration of Editor, see here for available options.\n   * @group Props\n   */\n  modules;\n  /**\n   * DOM Element or a CSS selector for a DOM Element, within which the editor’s p elements (i.e. tooltips, etc.) should be confined. Currently, it only considers left and right boundaries.\n   * @group Props\n   */\n  bounds;\n  /**\n   * DOM Element or a CSS selector for a DOM Element, specifying which container has the scrollbars (i.e. overflow-y: auto), if is has been changed from the default ql-editor with custom CSS. Necessary to fix scroll jumping bugs when Quill is set to auto grow its height, and another ancestor container is responsible from the scrolling..\n   * @group Props\n   */\n  scrollingContainer;\n  /**\n   * Shortcut for debug. Note debug is a static method and will affect other instances of Quill editors on the page. Only warning and error messages are enabled by default.\n   * @group Props\n   */\n  debug;\n  /**\n   * Whether to instantiate the editor to read-only mode.\n   * @group Props\n   */\n  get readonly() {\n    return this._readonly;\n  }\n  set readonly(val) {\n    this._readonly = val;\n    if (this.quill) {\n      if (this._readonly) this.quill.disable();else this.quill.enable();\n    }\n  }\n  /**\n   * Callback to invoke when the quill modules are loaded.\n   * @param {EditorInitEvent} event - custom event.\n   * @group Emits\n   */\n  onInit = new EventEmitter();\n  /**\n   * Callback to invoke when text of editor changes.\n   * @param {EditorTextChangeEvent} event - custom event.\n   * @group Emits\n   */\n  onTextChange = new EventEmitter();\n  /**\n   * Callback to invoke when selection of the text changes.\n   * @param {EditorSelectionChangeEvent} event - custom event.\n   * @group Emits\n   */\n  onSelectionChange = new EventEmitter();\n  templates;\n  toolbar;\n  value;\n  delayedCommand = null;\n  _readonly = false;\n  onModelChange = () => {};\n  onModelTouched = () => {};\n  quill;\n  dynamicQuill;\n  headerTemplate;\n  get isAttachedQuillEditorToDOM() {\n    return this.quillElements?.editorElement?.isConnected;\n  }\n  quillElements;\n  constructor(el, platformId) {\n    this.el = el;\n    this.platformId = platformId;\n    /**\n     * Read or write the DOM once, when initializing non-Angular (Quill) library.\n     */\n    afterNextRender(() => {\n      this.initQuillElements();\n      this.initQuillEditor();\n    });\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n      }\n    });\n  }\n  writeValue(value) {\n    this.value = value;\n    if (this.quill) {\n      if (value) {\n        const command = () => {\n          this.quill.setContents(this.quill.clipboard.convert(this.value));\n        };\n        if (this.isAttachedQuillEditorToDOM) {\n          command();\n        } else {\n          this.delayedCommand = command;\n        }\n      } else {\n        const command = () => {\n          this.quill.setText('');\n        };\n        if (this.isAttachedQuillEditorToDOM) {\n          command();\n        } else {\n          this.delayedCommand = command;\n        }\n      }\n    }\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  getQuill() {\n    return this.quill;\n  }\n  initQuillEditor() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    /**\n     * Importing Quill at top level, throws `document is undefined` error during when\n     * building for SSR, so this dynamically loads quill when it's in browser module.\n     */\n    if (!this.dynamicQuill) {\n      import('quill').then(quillModule => {\n        this.dynamicQuill = quillModule.default;\n        this.createQuillEditor();\n      }).catch(e => console.error(e.message));\n    } else {\n      this.createQuillEditor();\n    }\n  }\n  createQuillEditor() {\n    this.initQuillElements();\n    const {\n      toolbarElement,\n      editorElement\n    } = this.quillElements;\n    let defaultModule = {\n      toolbar: toolbarElement\n    };\n    let modules = this.modules ? {\n      ...defaultModule,\n      ...this.modules\n    } : defaultModule;\n    this.quill = new this.dynamicQuill(editorElement, {\n      modules: modules,\n      placeholder: this.placeholder,\n      readOnly: this.readonly,\n      theme: 'snow',\n      formats: this.formats,\n      bounds: this.bounds,\n      debug: this.debug,\n      scrollingContainer: this.scrollingContainer\n    });\n    if (this.value) {\n      this.quill.setContents(this.quill.clipboard.convert(this.value));\n    }\n    this.quill.on('text-change', (delta, oldContents, source) => {\n      if (source === 'user') {\n        let html = DomHandler.findSingle(editorElement, '.ql-editor').innerHTML;\n        let text = this.quill.getText().trim();\n        if (html === '<p><br></p>') {\n          html = null;\n        }\n        this.onTextChange.emit({\n          htmlValue: html,\n          textValue: text,\n          delta: delta,\n          source: source\n        });\n        this.onModelChange(html);\n        this.onModelTouched();\n      }\n    });\n    this.quill.on('selection-change', (range, oldRange, source) => {\n      this.onSelectionChange.emit({\n        range: range,\n        oldRange: oldRange,\n        source: source\n      });\n    });\n    this.onInit.emit({\n      editor: this.quill\n    });\n  }\n  initQuillElements() {\n    if (!this.quillElements) {\n      this.quillElements = {\n        editorElement: DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-content'),\n        toolbarElement: DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-toolbar')\n      };\n    }\n  }\n  static ɵfac = function Editor_Factory(t) {\n    return new (t || Editor)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Editor,\n    selectors: [[\"p-editor\"]],\n    contentQueries: function Editor_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, Header, 5);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbar = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      style: \"style\",\n      styleClass: \"styleClass\",\n      placeholder: \"placeholder\",\n      formats: \"formats\",\n      modules: \"modules\",\n      bounds: \"bounds\",\n      scrollingContainer: \"scrollingContainer\",\n      debug: \"debug\",\n      readonly: \"readonly\"\n    },\n    outputs: {\n      onInit: \"onInit\",\n      onTextChange: \"onTextChange\",\n      onSelectionChange: \"onSelectionChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([EDITOR_VALUE_ACCESSOR])],\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 6,\n    consts: [[3, \"ngClass\"], [\"class\", \"p-editor-toolbar\", 4, \"ngIf\"], [1, \"p-editor-content\", 3, \"ngStyle\"], [1, \"p-editor-toolbar\"], [4, \"ngTemplateOutlet\"], [1, \"ql-formats\"], [1, \"ql-header\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"selected\", \"\"], [1, \"ql-font\"], [\"value\", \"serif\"], [\"value\", \"monospace\"], [\"aria-label\", \"Bold\", \"type\", \"button\", 1, \"ql-bold\"], [\"aria-label\", \"Italic\", \"type\", \"button\", 1, \"ql-italic\"], [\"aria-label\", \"Underline\", \"type\", \"button\", 1, \"ql-underline\"], [1, \"ql-color\"], [1, \"ql-background\"], [\"value\", \"ordered\", \"aria-label\", \"Ordered List\", \"type\", \"button\", 1, \"ql-list\"], [\"value\", \"bullet\", \"aria-label\", \"Unordered List\", \"type\", \"button\", 1, \"ql-list\"], [1, \"ql-align\"], [\"value\", \"center\"], [\"value\", \"right\"], [\"value\", \"justify\"], [\"aria-label\", \"Insert Link\", \"type\", \"button\", 1, \"ql-link\"], [\"aria-label\", \"Insert Image\", \"type\", \"button\", 1, \"ql-image\"], [\"aria-label\", \"Insert Code Block\", \"type\", \"button\", 1, \"ql-code-block\"], [\"aria-label\", \"Remove Styles\", \"type\", \"button\", 1, \"ql-clean\"]],\n    template: function Editor_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, Editor_div_1_Template, 3, 1, \"div\", 1)(2, Editor_div_2_Template, 40, 0, \"div\", 1);\n        i0.ɵɵelement(3, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", \"p-editor-container\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.toolbar || ctx.headerTemplate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.toolbar && !ctx.headerTemplate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngStyle\", ctx.style);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle],\n    styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Editor, [{\n    type: Component,\n    args: [{\n      selector: 'p-editor',\n      template: `\n        <div [ngClass]=\"'p-editor-container'\" [class]=\"styleClass\">\n            <div class=\"p-editor-toolbar\" *ngIf=\"toolbar || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-editor-toolbar\" *ngIf=\"!toolbar && !headerTemplate\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                        <option value=\"1\">Heading</option>\n                        <option value=\"2\">Subheading</option>\n                        <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                        <option selected>Sans Serif</option>\n                        <option value=\"serif\">Serif</option>\n                        <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\" type=\"button\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\" type=\"button\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\" type=\"button\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\" type=\"button\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\">center</option>\n                        <option value=\"right\">right</option>\n                        <option value=\"justify\">justify</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\" type=\"button\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\" type=\"button\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\" type=\"button\"></button>\n                </span>\n            </div>\n            <div class=\"p-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `,\n      providers: [EDITOR_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      },\n      styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], {\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    scrollingContainer: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    onInit: [{\n      type: Output\n    }],\n    onTextChange: [{\n      type: Output\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    toolbar: [{\n      type: ContentChild,\n      args: [Header]\n    }]\n  });\n})();\nclass EditorModule {\n  static ɵfac = function EditorModule_Factory(t) {\n    return new (t || EditorModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: EditorModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Editor, SharedModule],\n      declarations: [Editor]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EDITOR_VALUE_ACCESSOR, Editor, EditorModule };","map":{"version":3,"names":["i1","isPlatformServer","CommonModule","i0","forwardRef","EventEmitter","afterNextRender","PLATFORM_ID","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","ContentChildren","ContentChild","NgModule","NG_VALUE_ACCESSOR","Header","PrimeTemplate","SharedModule","DomHandler","_c0","_c1","Editor_div_1_ng_container_2_Template","rf","ctx","ɵɵelementContainer","Editor_div_1_Template","ɵɵelementStart","ɵɵprojection","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵproperty","headerTemplate","Editor_div_2_Template","ɵɵtext","ɵɵelement","EDITOR_VALUE_ACCESSOR","provide","useExisting","Editor","multi","el","platformId","style","styleClass","placeholder","formats","modules","bounds","scrollingContainer","debug","readonly","_readonly","val","quill","disable","enable","onInit","onTextChange","onSelectionChange","templates","toolbar","value","delayedCommand","onModelChange","onModelTouched","dynamicQuill","isAttachedQuillEditorToDOM","quillElements","editorElement","isConnected","constructor","initQuillElements","initQuillEditor","ngAfterContentInit","forEach","item","getType","template","writeValue","command","setContents","clipboard","convert","setText","registerOnChange","fn","registerOnTouched","getQuill","then","quillModule","default","createQuillEditor","catch","e","console","error","message","toolbarElement","defaultModule","readOnly","theme","on","delta","oldContents","source","html","findSingle","innerHTML","text","getText","trim","emit","htmlValue","textValue","range","oldRange","editor","nativeElement","ɵfac","Editor_Factory","t","ɵɵdirectiveInject","ElementRef","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","Editor_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","inputs","outputs","features","ɵɵProvidersFeature","ngContentSelectors","decls","vars","consts","Editor_Template","ɵɵprojectionDef","ɵɵclassMap","dependencies","NgClass","NgIf","NgTemplateOutlet","NgStyle","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","providers","OnPush","None","host","class","undefined","decorators","EditorModule","EditorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/Users/issam/Desktop/AXE/Share/sharepop/First/node_modules/primeng/fesm2022/primeng-editor.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, afterNextRender, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Header, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\n\nconst EDITOR_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Editor),\n    multi: true\n};\n/**\n * Editor groups a collection of contents in tabs.\n * @group Components\n */\nclass Editor {\n    el;\n    platformId;\n    /**\n     * Inline style of the container.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the container.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Placeholder text to show when editor is empty.\n     * @group Props\n     */\n    placeholder;\n    /**\n     * Whitelist of formats to display, see here for available options.\n     * @group Props\n     */\n    formats;\n    /**\n     * Modules configuration of Editor, see here for available options.\n     * @group Props\n     */\n    modules;\n    /**\n     * DOM Element or a CSS selector for a DOM Element, within which the editor’s p elements (i.e. tooltips, etc.) should be confined. Currently, it only considers left and right boundaries.\n     * @group Props\n     */\n    bounds;\n    /**\n     * DOM Element or a CSS selector for a DOM Element, specifying which container has the scrollbars (i.e. overflow-y: auto), if is has been changed from the default ql-editor with custom CSS. Necessary to fix scroll jumping bugs when Quill is set to auto grow its height, and another ancestor container is responsible from the scrolling..\n     * @group Props\n     */\n    scrollingContainer;\n    /**\n     * Shortcut for debug. Note debug is a static method and will affect other instances of Quill editors on the page. Only warning and error messages are enabled by default.\n     * @group Props\n     */\n    debug;\n    /**\n     * Whether to instantiate the editor to read-only mode.\n     * @group Props\n     */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(val) {\n        this._readonly = val;\n        if (this.quill) {\n            if (this._readonly)\n                this.quill.disable();\n            else\n                this.quill.enable();\n        }\n    }\n    /**\n     * Callback to invoke when the quill modules are loaded.\n     * @param {EditorInitEvent} event - custom event.\n     * @group Emits\n     */\n    onInit = new EventEmitter();\n    /**\n     * Callback to invoke when text of editor changes.\n     * @param {EditorTextChangeEvent} event - custom event.\n     * @group Emits\n     */\n    onTextChange = new EventEmitter();\n    /**\n     * Callback to invoke when selection of the text changes.\n     * @param {EditorSelectionChangeEvent} event - custom event.\n     * @group Emits\n     */\n    onSelectionChange = new EventEmitter();\n    templates;\n    toolbar;\n    value;\n    delayedCommand = null;\n    _readonly = false;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    quill;\n    dynamicQuill;\n    headerTemplate;\n    get isAttachedQuillEditorToDOM() {\n        return this.quillElements?.editorElement?.isConnected;\n    }\n    quillElements;\n    constructor(el, platformId) {\n        this.el = el;\n        this.platformId = platformId;\n        /**\n         * Read or write the DOM once, when initializing non-Angular (Quill) library.\n         */\n        afterNextRender(() => {\n            this.initQuillElements();\n            this.initQuillEditor();\n        });\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    writeValue(value) {\n        this.value = value;\n        if (this.quill) {\n            if (value) {\n                const command = () => {\n                    this.quill.setContents(this.quill.clipboard.convert(this.value));\n                };\n                if (this.isAttachedQuillEditorToDOM) {\n                    command();\n                }\n                else {\n                    this.delayedCommand = command;\n                }\n            }\n            else {\n                const command = () => {\n                    this.quill.setText('');\n                };\n                if (this.isAttachedQuillEditorToDOM) {\n                    command();\n                }\n                else {\n                    this.delayedCommand = command;\n                }\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    getQuill() {\n        return this.quill;\n    }\n    initQuillEditor() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        /**\n         * Importing Quill at top level, throws `document is undefined` error during when\n         * building for SSR, so this dynamically loads quill when it's in browser module.\n         */\n        if (!this.dynamicQuill) {\n            import('quill')\n                .then((quillModule) => {\n                this.dynamicQuill = quillModule.default;\n                this.createQuillEditor();\n            })\n                .catch((e) => console.error(e.message));\n        }\n        else {\n            this.createQuillEditor();\n        }\n    }\n    createQuillEditor() {\n        this.initQuillElements();\n        const { toolbarElement, editorElement } = this.quillElements;\n        let defaultModule = { toolbar: toolbarElement };\n        let modules = this.modules ? { ...defaultModule, ...this.modules } : defaultModule;\n        this.quill = new this.dynamicQuill(editorElement, {\n            modules: modules,\n            placeholder: this.placeholder,\n            readOnly: this.readonly,\n            theme: 'snow',\n            formats: this.formats,\n            bounds: this.bounds,\n            debug: this.debug,\n            scrollingContainer: this.scrollingContainer\n        });\n        if (this.value) {\n            this.quill.setContents(this.quill.clipboard.convert(this.value));\n        }\n        this.quill.on('text-change', (delta, oldContents, source) => {\n            if (source === 'user') {\n                let html = DomHandler.findSingle(editorElement, '.ql-editor').innerHTML;\n                let text = this.quill.getText().trim();\n                if (html === '<p><br></p>') {\n                    html = null;\n                }\n                this.onTextChange.emit({\n                    htmlValue: html,\n                    textValue: text,\n                    delta: delta,\n                    source: source\n                });\n                this.onModelChange(html);\n                this.onModelTouched();\n            }\n        });\n        this.quill.on('selection-change', (range, oldRange, source) => {\n            this.onSelectionChange.emit({\n                range: range,\n                oldRange: oldRange,\n                source: source\n            });\n        });\n        this.onInit.emit({\n            editor: this.quill\n        });\n    }\n    initQuillElements() {\n        if (!this.quillElements) {\n            this.quillElements = {\n                editorElement: DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-content'),\n                toolbarElement: DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-toolbar')\n            };\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.7\", ngImport: i0, type: Editor, deps: [{ token: i0.ElementRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.7\", type: Editor, selector: \"p-editor\", inputs: { style: \"style\", styleClass: \"styleClass\", placeholder: \"placeholder\", formats: \"formats\", modules: \"modules\", bounds: \"bounds\", scrollingContainer: \"scrollingContainer\", debug: \"debug\", readonly: \"readonly\" }, outputs: { onInit: \"onInit\", onTextChange: \"onTextChange\", onSelectionChange: \"onSelectionChange\" }, host: { classAttribute: \"p-element\" }, providers: [EDITOR_VALUE_ACCESSOR], queries: [{ propertyName: \"toolbar\", first: true, predicate: Header, descendants: true }, { propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div [ngClass]=\"'p-editor-container'\" [class]=\"styleClass\">\n            <div class=\"p-editor-toolbar\" *ngIf=\"toolbar || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-editor-toolbar\" *ngIf=\"!toolbar && !headerTemplate\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                        <option value=\"1\">Heading</option>\n                        <option value=\"2\">Subheading</option>\n                        <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                        <option selected>Sans Serif</option>\n                        <option value=\"serif\">Serif</option>\n                        <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\" type=\"button\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\" type=\"button\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\" type=\"button\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\" type=\"button\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\">center</option>\n                        <option value=\"right\">right</option>\n                        <option value=\"justify\">justify</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\" type=\"button\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\" type=\"button\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\" type=\"button\"></button>\n                </span>\n            </div>\n            <div class=\"p-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `, isInline: true, styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.7\", ngImport: i0, type: Editor, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-editor', template: `\n        <div [ngClass]=\"'p-editor-container'\" [class]=\"styleClass\">\n            <div class=\"p-editor-toolbar\" *ngIf=\"toolbar || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-editor-toolbar\" *ngIf=\"!toolbar && !headerTemplate\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                        <option value=\"1\">Heading</option>\n                        <option value=\"2\">Subheading</option>\n                        <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                        <option selected>Sans Serif</option>\n                        <option value=\"serif\">Serif</option>\n                        <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\" type=\"button\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\" type=\"button\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\" type=\"button\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\" type=\"button\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\">center</option>\n                        <option value=\"right\">right</option>\n                        <option value=\"justify\">justify</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\" type=\"button\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\" type=\"button\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\" type=\"button\"></button>\n                </span>\n            </div>\n            <div class=\"p-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `, providers: [EDITOR_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }], propDecorators: { style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], scrollingContainer: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], onInit: [{\n                type: Output\n            }], onTextChange: [{\n                type: Output\n            }], onSelectionChange: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], toolbar: [{\n                type: ContentChild,\n                args: [Header]\n            }] } });\nclass EditorModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.7\", ngImport: i0, type: EditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.7\", ngImport: i0, type: EditorModule, declarations: [Editor], imports: [CommonModule], exports: [Editor, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.7\", ngImport: i0, type: EditorModule, imports: [CommonModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.7\", ngImport: i0, type: EditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Editor, SharedModule],\n                    declarations: [Editor]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EDITOR_VALUE_ACCESSOR, Editor, EditorModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}